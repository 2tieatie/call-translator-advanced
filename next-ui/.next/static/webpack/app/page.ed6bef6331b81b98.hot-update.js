"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/utils/utils.ts":
/*!****************************!*\
  !*** ./app/utils/utils.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addVideoElement: function() { return /* binding */ addVideoElement; },\n/* harmony export */   copyToClipboard: function() { return /* binding */ copyToClipboard; },\n/* harmony export */   createRoom: function() { return /* binding */ createRoom; },\n/* harmony export */   decode: function() { return /* binding */ decode; },\n/* harmony export */   dragAndDrop: function() { return /* binding */ dragAndDrop; },\n/* harmony export */   generateAndSavePermanentId: function() { return /* binding */ generateAndSavePermanentId; },\n/* harmony export */   getLanguagesArray: function() { return /* binding */ getLanguagesArray; },\n/* harmony export */   getVideoObj: function() { return /* binding */ getVideoObj; },\n/* harmony export */   handleVideoMute: function() { return /* binding */ handleVideoMute; },\n/* harmony export */   makeVideoElement: function() { return /* binding */ makeVideoElement; },\n/* harmony export */   removeVideoElement: function() { return /* binding */ removeVideoElement; },\n/* harmony export */   setAudioMuteState: function() { return /* binding */ setAudioMuteState; },\n/* harmony export */   setVideoMuteState: function() { return /* binding */ setVideoMuteState; },\n/* harmony export */   startLocalVideo: function() { return /* binding */ startLocalVideo; }\n/* harmony export */ });\n/* harmony import */ var _utils_socketNetworkHandlers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/socketNetworkHandlers */ \"(app-pages-browser)/./app/utils/socketNetworkHandlers.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst serverURL = \"http://127.0.0.1:5000/\";\nconst createRoom = async (roomName)=>{\n    try {\n        const response = await fetch(\"\".concat(serverURL, \"create_room\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"room_name\": roomName\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to create room\");\n        }\n        const data = await response.json();\n        const roomId = data.room_id;\n        const createdRoomName = data.room_name;\n        return {\n            roomId,\n            roomName: createdRoomName\n        };\n    } catch (error) {\n        console.error(\"Error creating room:\", error);\n        return null;\n    }\n};\nconst getLanguagesArray = async ()=>{\n    const response = await fetch(\"\".concat(serverURL, \"/languages\"), {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to load languages list\");\n    }\n    const data = await response.json();\n    return data.names.map((obj)=>Object.keys(obj)[0]);\n};\nconst decode = (value)=>{\n    if (Array.isArray(value)) {\n        return \"\";\n    }\n    return value ? decodeURIComponent(value) : \"\";\n};\nfunction makeVideoElement(elementId, displayName) {\n    const wrapperDiv = document.createElement(\"div\");\n    const vidWrapper = document.createElement(\"div\");\n    const vid = document.createElement(\"video\");\n    const nameText = document.createElement(\"h1\");\n    wrapperDiv.id = \"div_\".concat(elementId);\n    vid.id = \"vid_\".concat(elementId);\n    vid.className = \"remoteVideo rounded-lg shadow-md border border-gray-300 transition-shadow duration-500 ease-in-out\";\n    wrapperDiv.className = \"remoteVideo video-item\";\n    vidWrapper.className = \"vid-wrapper\";\n    vidWrapper.id = \"vidwr_\".concat(elementId);\n    nameText.className = \"display-name\";\n    wrapperDiv.style.backgroundColor = \"rgba(102, 177, 244, 0)\";\n    vidWrapper.style.backgroundColor = \"rgba(255, 255, 255, 0)\";\n    vid.autoplay = true;\n    nameText.innerText = displayName;\n    vidWrapper.appendChild(vid);\n    wrapperDiv.appendChild(vidWrapper);\n    wrapperDiv.appendChild(nameText);\n    return wrapperDiv;\n}\nfunction addVideoElement(elementId, displayName) {\n    removeVideoElement(elementId);\n    const videoGrid = document.getElementById(\"video_grid\");\n    if (videoGrid) {\n        videoGrid.appendChild(makeVideoElement(elementId, displayName));\n    // getParticipantsWithOtherLanguages();\n    } else {\n        console.log(\"No Video Grid\");\n    }\n}\nfunction removeVideoElement(elementId) {\n    const div = document.getElementById(\"div_\".concat(elementId));\n    if (!div) {\n        console.log(\"Video element not found\");\n        return;\n    }\n    const vid = getVideoObj(elementId);\n    if (vid) {\n        if (vid.srcObject) {\n            const tracks = vid.srcObject.getTracks();\n            tracks.forEach((track)=>track.stop());\n        }\n        vid.removeAttribute(\"srcObject\");\n        vid.removeAttribute(\"src\");\n    }\n    div.remove();\n}\nfunction getVideoObj(elementId) {\n    const videoObj = document.getElementById(\"vid_\".concat(elementId));\n    if (videoObj) {\n        return videoObj;\n    }\n    console.log(\"No videoObj vid_\" + elementId);\n    return null;\n}\nconst dragAndDrop = (element)=>{\n    const elementContainer = element.current;\n    if (elementContainer) {\n        let isDragging = false;\n        let dragStartX = 0;\n        let dragStartY = 0;\n        let dragStartLeft = 0;\n        let dragStartTop = 0;\n        const handleDragStart = (event)=>{\n            isDragging = true;\n            dragStartX = event.clientX;\n            dragStartY = event.clientY;\n            dragStartLeft = elementContainer.offsetLeft;\n            dragStartTop = elementContainer.offsetTop;\n        };\n        const handleDragMove = (event)=>{\n            if (!isDragging) return;\n            const deltaX = event.clientX - dragStartX;\n            const deltaY = event.clientY - dragStartY;\n            elementContainer.style.left = \"\".concat(dragStartLeft + deltaX, \"px\");\n            elementContainer.style.top = \"\".concat(dragStartTop + deltaY, \"px\");\n        };\n        const handleDragEnd = ()=>{\n            isDragging = false;\n        };\n        elementContainer.addEventListener(\"mousedown\", handleDragStart);\n        document.addEventListener(\"mousemove\", handleDragMove);\n        document.addEventListener(\"mouseup\", handleDragEnd);\n        return ()=>{\n            elementContainer.removeEventListener(\"mousedown\", handleDragStart);\n            document.removeEventListener(\"mousemove\", handleDragMove);\n            document.removeEventListener(\"mouseup\", handleDragEnd);\n        };\n    }\n};\nconst setAudioMuteState = (stream, muted)=>{\n    console.log(stream);\n    if (stream) {\n        if (\"getAudioTracks\" in stream) {\n            stream.getAudioTracks().forEach((track)=>{\n                track.enabled = !muted;\n                console.log(track.enabled);\n            });\n        }\n    }\n    return stream;\n};\nfunction stopVideoOnly(stream) {\n    stream.getVideoTracks().forEach((track)=>{\n        track.enabled = false;\n        setTimeout(()=>{\n            track.stop();\n            console.log(track);\n        }, 1);\n    });\n}\nfunction setVideoMuteState(videoRef, muted) {\n    let localStream = videoRef.srcObject;\n    if (!muted) {\n        console.log(123123);\n        stopVideoOnly(localStream);\n    } else {\n        navigator.mediaDevices.getUserMedia({\n            video: true\n        }).then((stream)=>{\n            videoRef.srcObject = stream;\n            (0,_utils_socketNetworkHandlers__WEBPACK_IMPORTED_MODULE_0__.updateRemotePeerConnections)(stream);\n        }).catch((error)=>{\n            console.error(\"Error accessing camera\", error);\n        });\n    }\n}\nlet uuidv4 = ()=>{\n    return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, (c)=>(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n};\nconst generateAndSavePermanentId = ()=>{\n    const permanentId = localStorage.getItem(\"permanent_id\");\n    if (permanentId) {\n        console.log(\"Permanent ID already exists:\", permanentId);\n        return permanentId;\n    } else {\n        const newPermanentId = uuidv4();\n        localStorage.setItem(\"permanent_id\", newPermanentId);\n        console.log(\"New Permanent ID generated:\", newPermanentId);\n        return newPermanentId;\n    }\n};\nconst startLocalVideo = async (videoRef)=>{\n    try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true\n        });\n        if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n            await new Promise((resolve)=>{\n                videoRef.current.onloadedmetadata = ()=>{\n                    resolve();\n                };\n            });\n        }\n    } catch (error) {\n        console.error(\"Error accessing media devices:\", error);\n    }\n};\nconst handleVideoMute = (videoMuted, videoRef)=>{\n    if (!videoMuted && videoRef.current && videoRef.current.srcObject instanceof MediaStream) {\n        const videoTracks = videoRef.current.srcObject.getVideoTracks();\n        videoTracks.forEach((track)=>{\n            track.enabled = false;\n            setTimeout(()=>{\n                track.stop();\n            }, 500);\n        });\n    } else {\n        startLocalVideo(videoRef).then(()=>{\n            setTimeout(()=>{\n                if (videoRef.current && videoRef.current.srcObject instanceof MediaStream) {\n                    (0,_utils_socketNetworkHandlers__WEBPACK_IMPORTED_MODULE_0__.updateRemotePeerConnections)(videoRef.current.srcObject);\n                }\n            }, 500);\n        });\n    }\n};\nasync function copyToClipboard(value) {\n    try {\n        await navigator.clipboard.writeText(value);\n    } catch (err) {\n        console.error(\"Error occurred:\", err);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/utils.ts\n"));

/***/ })

});